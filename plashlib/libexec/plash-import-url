#!/usr/bin/env python3
#
# usage: plash import-url-as URL
# Import a url as a container

import sys
from os import execlp
from urllib.request import urlretrieve
from urllib.error import URLError
from subprocess import CalledProcessError, check_call
from plashlib.utils import handle_help_flag, die_with_usage, catch_and_die
from plashlib import ux
from tempfile import mkstemp

handle_help_flag()
ux.assert_initialized()

try:
    url = sys.argv[1]
except IndexError:
    die_with_usage()

tmpfile = mkstemp()[1]

dots = [0]


def reporthook(count, block_size, total_size):
    percent = int(count * block_size * 100 / total_size)
    #percent = min(int(count*block_size*100/total_size),100)
    if percent // 10 > dots[0] and not dots[0] >= 9:
        dots[0] += 1
        if dots[0]:
            sys.stderr.write('{}%|'.format(dots[0] * 10))
            sys.stderr.flush()


sys.stderr.write('Fetch  [0%|')
sys.stderr.flush()
with catch_and_die([URLError], debug=url):
    try:
        urlretrieve(url, tmpfile, reporthook=reporthook)
    except:
        sys.stderr.write('\n')
        sys.stderr.flush()
        raise

sys.stderr.write('100%]\n')
sys.stderr.flush()

execlp('plash-import-tar', 'plash import-tar', tmpfile)
