#!/usr/bin/env python3
#
# usage: plash export-img CONTAINER FILE
# Export a container as ext4 file system

import sys
from plashlib.utils import handle_help_flag, die_with_usage, catch_and_die, handle_build_args
from plashlib import ux
from subprocess import check_call, CalledProcessError, check_output, DEVNULL
from tempfile import mkdtemp, mktemp
import os
from shutil import move

handle_help_flag()
handle_build_args()
ux.assert_initialized()

try:
    container, out = sys.argv[1:3]
except ValueError:
    die_with_usage()

with catch_and_die([OSError]):
    tmp = mktemp()
    mnt = mkdtemp()

with catch_and_die([CalledProcessError, FileNotFoundError]):
    image_size = int(
        check_output(['plash-with-mount', container, 'du', '-s'
                      ]).decode().split()[0]) * 1.2
    check_call(['fallocate', '-l', '{}K'.format(image_size), tmp])
    check_call(['mkfs.ext4', '-q', tmp])
    check_call(['mount', tmp, mnt])
    check_call(['plash with-mount', container, 'cp', '-r', '.', mnt])
    check_call(['umount', mnt])
    check_call(['e2fsck', '-fp', tmp], stdout=DEVNULL)
    check_call(['resize2fs', '-M', tmp], stderr=DEVNULL)

with catch_and_die([OSError]):
    move(tmp, out)
