#!/usr/bin/env python3

import sys
from plashlib.utils import nodepath_or_die, plash_map, catch_and_die
from subprocess import check_output, CalledProcessError

base_container = sys.argv[1]

#
#  convert the base_container into an container id, also use caching
#
if base_container.isdigit():
    base_container = base_container
    nodepath_or_die(base_container)
elif base_container.startswith('@'):
    base_container = plash_map(base_container[1:])
    if not base_container:
        die('image map could not be resolved: {}'.format(base_container))
else:
    if base_container.startswith('https://') or base_container.startswith('http://'):
        cmd = ['plash-import-url', base_container]
    elif base_container.startswith('/') or base_container.startswith('./'):
        cmd = ['plash-import-tar', base_container]
    elif base_container.startswith('docker://'):
        cmd = ['plash-import-docker', base_container[9:]]
    else:
        cmd = ['plash-import-lxcimages', base_container]
    cache_key = ':'.join(cmd)
    base_container = plash_map(cache_key.encode())
    if not base_container:
        with catch_and_die([CalledProcessError]):
            base_container = check_output(cmd).decode().strip('\n')
        plash_map(cache_key.encode(), base_container)

print(base_container)
