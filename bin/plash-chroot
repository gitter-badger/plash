#!/usr/bin/env python3
#
# usage: plash-chroot rootfs [MOUNTS]
    
import os
import sys
if os.getuid(): # not root
    os.execlp('plash-noroot', 'plash-noroot', *sys.argv)
import argparse
from plashlib.utils import handle_help_flag, get_default_shell, die
from subprocess import check_call

handle_help_flag()

parser = argparse.ArgumentParser(add_help=False)
parser.add_argument('mountpoint')
parser.add_argument('cmd', nargs='*')
parser.add_argument('--rbind', action='append', default=[], nargs='*')
args = parser.parse_args()

for mounts in args.rbind:
    for mount in mounts:
        check_call(['mount', '--rbind', mount, os.path.join(args.mountpoint, mount.lstrip('/'))])

pwd_at_start = os.getcwd()
os.chroot(args.mountpoint)

if not args.cmd:
    default_root_shell = get_default_shell('/etc/passwd')
    cmd = [default_root_shell]
else:
    cmd = args.cmd

try:
    os.chdir(pwd_at_start)
except (ValueError, PermissionError,
        FileNotFoundError):  # TODO: put more exceptions here
    os.chdir('/')

try:
    os.execlp(cmd[0], *cmd)
except FileNotFoundError:
    die('Command not found: {}'.format(cmd[0]))
